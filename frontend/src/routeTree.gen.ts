/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutSignupIndexImport } from './routes/_layout/signup/index'
import { Route as LayoutLoginIndexImport } from './routes/_layout/login/index'
import { Route as LayoutHomeIndexImport } from './routes/_layout/home/index'
import { Route as LayoutDiaryIndexImport } from './routes/_layout/diary/index'
import { Route as LayoutCommunityIndexImport } from './routes/_layout/community/index'
import { Route as LayoutDiaryMyCropsImport } from './routes/_layout/diary/myCrops'
import { Route as LayoutDiaryCalendarImport } from './routes/_layout/diary/calendar'
import { Route as LayoutCommunityDetailImport } from './routes/_layout/community/detail'
import { Route as LayoutDiaryCreate3Import } from './routes/_layout/diary/create/3'
import { Route as LayoutDiaryCreate2Import } from './routes/_layout/diary/create/2'
import { Route as LayoutDiaryCreate1Import } from './routes/_layout/diary/create/1'

// Create/Update Routes

const TestRoute = TestImport.update({
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSignupIndexRoute = LayoutSignupIndexImport.update({
  path: '/signup/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutLoginIndexRoute = LayoutLoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHomeIndexRoute = LayoutHomeIndexImport.update({
  path: '/home/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiaryIndexRoute = LayoutDiaryIndexImport.update({
  path: '/diary/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCommunityIndexRoute = LayoutCommunityIndexImport.update({
  path: '/community/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiaryMyCropsRoute = LayoutDiaryMyCropsImport.update({
  path: '/diary/myCrops',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiaryCalendarRoute = LayoutDiaryCalendarImport.update({
  path: '/diary/calendar',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCommunityDetailRoute = LayoutCommunityDetailImport.update({
  path: '/community/detail',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiaryCreate3Route = LayoutDiaryCreate3Import.update({
  path: '/diary/create/3',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiaryCreate2Route = LayoutDiaryCreate2Import.update({
  path: '/diary/create/2',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDiaryCreate1Route = LayoutDiaryCreate1Import.update({
  path: '/diary/create/1',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/community/detail': {
      id: '/_layout/community/detail'
      path: '/community/detail'
      fullPath: '/community/detail'
      preLoaderRoute: typeof LayoutCommunityDetailImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/diary/calendar': {
      id: '/_layout/diary/calendar'
      path: '/diary/calendar'
      fullPath: '/diary/calendar'
      preLoaderRoute: typeof LayoutDiaryCalendarImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/diary/myCrops': {
      id: '/_layout/diary/myCrops'
      path: '/diary/myCrops'
      fullPath: '/diary/myCrops'
      preLoaderRoute: typeof LayoutDiaryMyCropsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/community/': {
      id: '/_layout/community/'
      path: '/community'
      fullPath: '/community'
      preLoaderRoute: typeof LayoutCommunityIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/diary/': {
      id: '/_layout/diary/'
      path: '/diary'
      fullPath: '/diary'
      preLoaderRoute: typeof LayoutDiaryIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/home/': {
      id: '/_layout/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof LayoutHomeIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/login/': {
      id: '/_layout/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LayoutLoginIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/signup/': {
      id: '/_layout/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof LayoutSignupIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/diary/create/1': {
      id: '/_layout/diary/create/1'
      path: '/diary/create/1'
      fullPath: '/diary/create/1'
      preLoaderRoute: typeof LayoutDiaryCreate1Import
      parentRoute: typeof LayoutImport
    }
    '/_layout/diary/create/2': {
      id: '/_layout/diary/create/2'
      path: '/diary/create/2'
      fullPath: '/diary/create/2'
      preLoaderRoute: typeof LayoutDiaryCreate2Import
      parentRoute: typeof LayoutImport
    }
    '/_layout/diary/create/3': {
      id: '/_layout/diary/create/3'
      path: '/diary/create/3'
      fullPath: '/diary/create/3'
      preLoaderRoute: typeof LayoutDiaryCreate3Import
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutIndexRoute,
    LayoutCommunityDetailRoute,
    LayoutDiaryCalendarRoute,
    LayoutDiaryMyCropsRoute,
    LayoutCommunityIndexRoute,
    LayoutDiaryIndexRoute,
    LayoutHomeIndexRoute,
    LayoutLoginIndexRoute,
    LayoutSignupIndexRoute,
    LayoutDiaryCreate1Route,
    LayoutDiaryCreate2Route,
    LayoutDiaryCreate3Route,
  }),
  TestRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/test"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/",
        "/_layout/community/detail",
        "/_layout/diary/calendar",
        "/_layout/diary/myCrops",
        "/_layout/community/",
        "/_layout/diary/",
        "/_layout/home/",
        "/_layout/login/",
        "/_layout/signup/",
        "/_layout/diary/create/1",
        "/_layout/diary/create/2",
        "/_layout/diary/create/3"
      ]
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/community/detail": {
      "filePath": "_layout/community/detail.tsx",
      "parent": "/_layout"
    },
    "/_layout/diary/calendar": {
      "filePath": "_layout/diary/calendar.tsx",
      "parent": "/_layout"
    },
    "/_layout/diary/myCrops": {
      "filePath": "_layout/diary/myCrops.tsx",
      "parent": "/_layout"
    },
    "/_layout/community/": {
      "filePath": "_layout/community/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/diary/": {
      "filePath": "_layout/diary/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/home/": {
      "filePath": "_layout/home/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/login/": {
      "filePath": "_layout/login/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/signup/": {
      "filePath": "_layout/signup/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/diary/create/1": {
      "filePath": "_layout/diary/create/1.tsx",
      "parent": "/_layout"
    },
    "/_layout/diary/create/2": {
      "filePath": "_layout/diary/create/2.tsx",
      "parent": "/_layout"
    },
    "/_layout/diary/create/3": {
      "filePath": "_layout/diary/create/3.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
